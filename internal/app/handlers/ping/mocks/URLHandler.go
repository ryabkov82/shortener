// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ryabkov82/shortener/internal/app/handlers/ping (interfaces: URLHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLHandler is a mock of URLHandler interface.
type MockURLHandler struct {
	ctrl     *gomock.Controller
	recorder *MockURLHandlerMockRecorder
}

// MockURLHandlerMockRecorder is the mock recorder for MockURLHandler.
type MockURLHandlerMockRecorder struct {
	mock *MockURLHandler
}

// NewMockURLHandler creates a new mock instance.
func NewMockURLHandler(ctrl *gomock.Controller) *MockURLHandler {
	mock := &MockURLHandler{ctrl: ctrl}
	mock.recorder = &MockURLHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLHandler) EXPECT() *MockURLHandlerMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockURLHandler) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockURLHandlerMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockURLHandler)(nil).Ping))
}
