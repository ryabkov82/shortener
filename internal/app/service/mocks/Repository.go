// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ryabkov82/shortener/internal/app/service (interfaces: Repository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ryabkov82/shortener/internal/app/models"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetRedirectURL mocks base method.
func (m *MockRepository) GetRedirectURL(arg0 string) (models.URLMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedirectURL", arg0)
	ret0, _ := ret[0].(models.URLMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRedirectURL indicates an expected call of GetRedirectURL.
func (mr *MockRepositoryMockRecorder) GetRedirectURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedirectURL", reflect.TypeOf((*MockRepository)(nil).GetRedirectURL), arg0)
}

// GetShortKey mocks base method.
func (m *MockRepository) GetShortKey(arg0 string) (models.URLMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShortKey", arg0)
	ret0, _ := ret[0].(models.URLMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShortKey indicates an expected call of GetShortKey.
func (mr *MockRepositoryMockRecorder) GetShortKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShortKey", reflect.TypeOf((*MockRepository)(nil).GetShortKey), arg0)
}

// Ping mocks base method.
func (m *MockRepository) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockRepositoryMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockRepository)(nil).Ping))
}

// SaveURL mocks base method.
func (m *MockRepository) SaveURL(arg0 models.URLMapping) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveURL", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveURL indicates an expected call of SaveURL.
func (mr *MockRepositoryMockRecorder) SaveURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveURL", reflect.TypeOf((*MockRepository)(nil).SaveURL), arg0)
}
